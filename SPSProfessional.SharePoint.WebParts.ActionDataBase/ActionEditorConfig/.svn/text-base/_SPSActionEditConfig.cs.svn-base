// Copyright 2004, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.4.2.1
// Schema file: ActionEditConfig.xsd
// Creation Date: 13/11/2007 0:15:42
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;

namespace SPSProfessional.SharePoint.WebParts.ActionDataBase.ActionEditorConfig
{
    public struct Declarations
    {
        public const string SchemaVersion = "";
    }

    [Serializable]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public class FieldCollection : ArrayList
    {
        public Field Add(Field obj)
        {
            base.Add(obj);
            return obj;
        }

        public Field Add()
        {
            return Add(new Field());
        }

        public void Insert(int index, Field obj)
        {
            base.Insert(index, obj);
        }

        public void Remove(Field obj)
        {
            base.Remove(obj);
        }

        new public Field this[int index]
        {
            get { return (Field) base[index]; }
            set { base[index] = value; }
        }
    }

    [Serializable]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public class ValidatorCollection : ArrayList
    {
        public Validator Add(Validator obj)
        {
            base.Add(obj);
            return obj;
        }

        public Validator Add()
        {
            return Add(new Validator());
        }

        public void Insert(int index, Validator obj)
        {
            base.Insert(index, obj);
        }

        public void Remove(Validator obj)
        {
            base.Remove(obj);
        }

        new public Validator this[int index]
        {
            get { return (Validator) base[index]; }
            set { base[index] = value; }
        }
    }

    [Serializable]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public class OptionCollection : ArrayList
    {
        public Option Add(Option obj)
        {
            base.Add(obj);
            return obj;
        }

        public Option Add()
        {
            return Add(new Option());
        }

        public void Insert(int index, Option obj)
        {
            base.Insert(index, obj);
        }

        public void Remove(Option obj)
        {
            base.Remove(obj);
        }

        new public Option this[int index]
        {
            get { return (Option) base[index]; }
            set { base[index] = value; }
        }
    }

    [Serializable]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public class IdentityColumnCollection : ArrayList
    {
        public IdentityColumn Add(IdentityColumn obj)
        {
            base.Add(obj);
            return obj;
        }

        public IdentityColumn Add()
        {
            return Add(new IdentityColumn());
        }

        public void Insert(int index, IdentityColumn obj)
        {
            base.Insert(index, obj);
        }

        public void Remove(IdentityColumn obj)
        {
            base.Remove(obj);
        }

        new public IdentityColumn this[int index]
        {
            get { return (IdentityColumn) base[index]; }
            set { base[index] = value; }
        }
    }

    [Serializable]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public class ActionToolBarCollection : ArrayList
    {
        public ActionToolBar Add(ActionToolBar obj)
        {
            base.Add(obj);
            return obj;
        }

        public ActionToolBar Add()
        {
            return Add(new ActionToolBar());
        }

        public void Insert(int index, ActionToolBar obj)
        {
            base.Insert(index, obj);
        }

        public void Remove(ActionToolBar obj)
        {
            base.Remove(obj);
        }

        new public ActionToolBar this[int index]
        {
            get { return (ActionToolBar) base[index]; }
            set { base[index] = value; }
        }
    }

    [XmlRoot(ElementName="SPSActionEditConfig",IsNullable=false),Serializable]
    public class SPSActionEditConfig
    {

        [XmlElement(Type=typeof(DataBase),ElementName="DataBase",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public DataBase __DataBase;
		
        [XmlIgnore]
        public DataBase DataBase
        {
            get
            {
                if (__DataBase == null) __DataBase = new DataBase();		
                return __DataBase;
            }
            set {__DataBase = value;}
        }

        [XmlElement(Type=typeof(ActionToolBars),ElementName="ActionToolBars",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public ActionToolBars __ActionToolBars;
		
        [XmlIgnore]
        public ActionToolBars ActionToolBars
        {
            get
            {
                if (__ActionToolBars == null) __ActionToolBars = new ActionToolBars();		
                return __ActionToolBars;
            }
            set {__ActionToolBars = value;}
        }

        [XmlElement(Type=typeof(Fields),ElementName="Fields",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Fields __Fields;
		
        [XmlIgnore]
        public Fields Fields
        {
            get
            {
                if (__Fields == null) __Fields = new Fields();		
                return __Fields;
            }
            set {__Fields = value;}
        }

        public SPSActionEditConfig()
        {
        }
    }

    [XmlType(TypeName="DataBase"),Serializable]
    public class DataBase
    {

        [XmlAttribute(AttributeName="ConnectionString",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __ConnectionString;
		
        [XmlIgnore]
        public string ConnectionString
        { 
            get { return __ConnectionString; }
            set { __ConnectionString = value; }
        }

        [XmlElement(Type=typeof(Table),ElementName="Table",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Table __Table;
		
        [XmlIgnore]
        public Table Table
        {
            get
            {
                if (__Table == null) __Table = new Table();		
                return __Table;
            }
            set {__Table = value;}
        }

        public DataBase()
        {
            ConnectionString = string.Empty;
        }
    }

    [XmlType(TypeName="Table"),Serializable]
    public class Table
    {
        [System.Runtime.InteropServices.DispIdAttribute(-4)]
        public IEnumerator GetEnumerator() 
        {
            return IdentityColumnCollection.GetEnumerator();
        }

        public IdentityColumn Add(IdentityColumn obj)
        {
            return IdentityColumnCollection.Add(obj);
        }

        [XmlIgnore]
        public IdentityColumn this[int index]
        {
            get { return IdentityColumnCollection[index]; }
        }

        [XmlIgnore]
        public int Count 
        {
            get { return IdentityColumnCollection.Count; }
        }

        public void Clear()
        {
            IdentityColumnCollection.Clear();
        }

        public IdentityColumn Remove(int index) 
        { 
            IdentityColumn obj = IdentityColumnCollection[index];
            IdentityColumnCollection.Remove(obj);
            return obj;
        }

        public void Remove(object obj)
        {
            IdentityColumnCollection.Remove(obj);
        }

        [XmlAttribute(AttributeName="Name",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Name;
		
        [XmlIgnore]
        public string Name
        { 
            get { return __Name; }
            set { __Name = value; }
        }

        [XmlElement(Type=typeof(IdentityColumn),ElementName="IdentityColumn",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public IdentityColumnCollection __IdentityColumnCollection;
		
        [XmlIgnore]
        public IdentityColumnCollection IdentityColumnCollection
        {
            get
            {
                if (__IdentityColumnCollection == null) __IdentityColumnCollection = new IdentityColumnCollection();
                return __IdentityColumnCollection;
            }
            set {__IdentityColumnCollection = value;}
        }

        public Table()
        {
            Name = string.Empty;
        }
    }

    [XmlType(TypeName="IdentityColumn"),Serializable]
    public class IdentityColumn
    {

        [XmlAttribute(AttributeName="Name",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Name;
		
        [XmlIgnore]
        public string Name
        { 
            get { return __Name; }
            set { __Name = value; }
        }

        [XmlAttribute(AttributeName="Type",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Type;
		
        [XmlIgnore]
        public string Type
        { 
            get { return __Type; }
            set { __Type = value; }
        }

        public IdentityColumn()
        {
            Name = string.Empty;
            Type = string.Empty;
        }
    }

    [XmlType(TypeName="ActionToolBars"),Serializable]
    public class ActionToolBars
    {
        [System.Runtime.InteropServices.DispIdAttribute(-4)]
        public IEnumerator GetEnumerator() 
        {
            return ActionToolBarCollection.GetEnumerator();
        }

        public ActionToolBar Add(ActionToolBar obj)
        {
            return ActionToolBarCollection.Add(obj);
        }

        [XmlIgnore]
        public ActionToolBar this[int index]
        {
            get { return ActionToolBarCollection[index]; }
        }

        [XmlIgnore]
        public int Count 
        {
            get { return ActionToolBarCollection.Count; }
        }

        public void Clear()
        {
            ActionToolBarCollection.Clear();
        }

        public ActionToolBar Remove(int index) 
        { 
            ActionToolBar obj = ActionToolBarCollection[index];
            ActionToolBarCollection.Remove(obj);
            return obj;
        }

        public void Remove(object obj)
        {
            ActionToolBarCollection.Remove(obj);
        }

        [XmlElement(Type=typeof(ActionToolBar),ElementName="ActionToolBar",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public ActionToolBarCollection __ActionToolBarCollection;
		
        [XmlIgnore]
        public ActionToolBarCollection ActionToolBarCollection
        {
            get
            {
                if (__ActionToolBarCollection == null) __ActionToolBarCollection = new ActionToolBarCollection();
                return __ActionToolBarCollection;
            }
            set {__ActionToolBarCollection = value;}
        }

        public ActionToolBars()
        {
        }
    }

    [XmlType(TypeName="ActionToolBar"),Serializable]
    public class ActionToolBar
    {
        [System.Runtime.InteropServices.DispIdAttribute(-4)]
        public IEnumerator GetEnumerator() 
        {
            return OptionCollection.GetEnumerator();
        }

        public Option Add(Option obj)
        {
            return OptionCollection.Add(obj);
        }

        [XmlIgnore]
        public Option this[int index]
        {
            get { return OptionCollection[index]; }
        }

        [XmlIgnore]
        public int Count 
        {
            get { return OptionCollection.Count; }
        }

        public void Clear()
        {
            OptionCollection.Clear();
        }

        public Option Remove(int index) 
        { 
            Option obj = OptionCollection[index];
            OptionCollection.Remove(obj);
            return obj;
        }

        public void Remove(object obj)
        {
            OptionCollection.Remove(obj);
        }

        [XmlAttribute(AttributeName="Name",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Name;
		
        [XmlIgnore]
        public string Name
        { 
            get { return __Name; }
            set { __Name = value; }
        }

        [XmlElement(Type=typeof(Option),ElementName="Option",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public OptionCollection __OptionCollection;
		
        [XmlIgnore]
        public OptionCollection OptionCollection
        {
            get
            {
                if (__OptionCollection == null) __OptionCollection = new OptionCollection();
                return __OptionCollection;
            }
            set {__OptionCollection = value;}
        }

        public ActionToolBar()
        {
            Name = string.Empty;
        }
    }

    [XmlType(TypeName="Option"),Serializable]
    public class Option
    {

        [XmlAttribute(AttributeName="Name",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Name;
		
        [XmlIgnore]
        public string Name
        { 
            get { return __Name; }
            set { __Name = value; }
        }

        [XmlAttribute(AttributeName="ImageUrl",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __ImageUrl;
		
        [XmlIgnore]
        public string ImageUrl
        { 
            get { return __ImageUrl; }
            set { __ImageUrl = value; }
        }

        [XmlAttribute(AttributeName="Action",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Action;
		
        [XmlIgnore]
        public string Action
        { 
            get { return __Action; }
            set { __Action = value; }
        }

        [XmlAttribute(AttributeName="NavigateUrl",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __NavigateUrl;
		
        [XmlIgnore]
        public string NavigateUrl
        { 
            get { return __NavigateUrl; }
            set { __NavigateUrl = value; }
        }

        public Option()
        {
            Name = string.Empty;
        }
    }

    [XmlType(TypeName="Fields"),Serializable]
    public class Fields
    {
        [System.Runtime.InteropServices.DispIdAttribute(-4)]
        public IEnumerator GetEnumerator() 
        {
            return FieldCollection.GetEnumerator();
        }

        public Field Add(Field obj)
        {
            return FieldCollection.Add(obj);
        }

        [XmlIgnore]
        public Field this[int index]
        {
            get { return FieldCollection[index]; }
        }

        [XmlIgnore]
        public int Count 
        {
            get { return FieldCollection.Count; }
        }

        public void Clear()
        {
            FieldCollection.Clear();
        }

        public Field Remove(int index) 
        { 
            Field obj = FieldCollection[index];
            FieldCollection.Remove(obj);
            return obj;
        }

        public void Remove(object obj)
        {
            FieldCollection.Remove(obj);
        }

        [XmlElement(Type=typeof(Field),ElementName="Field",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public FieldCollection __FieldCollection;
		
        [XmlIgnore]
        public FieldCollection FieldCollection
        {
            get
            {
                if (__FieldCollection == null) __FieldCollection = new FieldCollection();
                return __FieldCollection;
            }
            set {__FieldCollection = value;}
        }

        public Fields()
        {
        }
    }

    [XmlType(TypeName="Field"),Serializable]
    public class Field
    {

        [XmlAttribute(AttributeName="Name",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Name;
		
        [XmlIgnore]
        public string Name
        { 
            get { return __Name; }
            set { __Name = value; }
        }

        [XmlAttribute(AttributeName="Title",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Title;
		
        [XmlIgnore]
        public string Title
        { 
            get { return __Title; }
            set { __Title = value; }
        }

        [XmlAttribute(AttributeName="Control",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Control;
		
        [XmlIgnore]
        public string Control
        { 
            get { return __Control; }
            set { __Control = value; }
        }

        [XmlAttribute(AttributeName="Type",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Type;
		
        [XmlIgnore]
        public string Type
        { 
            get { return __Type; }
            set { __Type = value; }
        }

        [XmlAttribute(AttributeName="Required",Form=XmlSchemaForm.Unqualified,DataType="boolean")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __Required;
		
        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __RequiredSpecified;
		
        [XmlIgnore]
        public bool Required
        { 
            get { return __Required; }
            set { __Required = value; __RequiredSpecified = true; }
        }

        [XmlAttribute(AttributeName="DefaultValue",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DefaultValue;
		
        [XmlIgnore]
        public string DefaultValue
        { 
            get { return __DefaultValue; }
            set { __DefaultValue = value; }
        }

        [XmlAttribute(AttributeName="DisplayFormat",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DisplayFormat;
		
        [XmlIgnore]
        public string DisplayFormat
        { 
            get { return __DisplayFormat; }
            set { __DisplayFormat = value; }
        }

        [XmlAttribute(AttributeName="New",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __New;
		
        [XmlIgnore]
        public string @New
        { 
            get { return __New; }
            set { __New = value; }
        }

        [XmlAttribute(AttributeName="Edit",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Edit;
		
        [XmlIgnore]
        public string Edit
        { 
            get { return __Edit; }
            set { __Edit = value; }
        }

        [XmlAttribute(AttributeName="View",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __View;
		
        [XmlIgnore]
        public string View
        { 
            get { return __View; }
            set { __View = value; }
        }

        [XmlAttribute(AttributeName="Description",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Description;
		
        [XmlIgnore]
        public string Description
        { 
            get { return __Description; }
            set { __Description = value; }
        }

        [XmlAttribute(AttributeName="Validator",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Validator;
		
        [XmlIgnore]
        public string Validator
        { 
            get { return __Validator; }
            set { __Validator = value; }
        }

        [XmlElement(Type=typeof(TextBox),ElementName="TextBox",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public TextBox __TextBox;
		
        [XmlIgnore]
        public TextBox TextBox
        {
            get
            {
                if (__TextBox == null) __TextBox = new TextBox();		
                return __TextBox;
            }
            set {__TextBox = value;}
        }

        [XmlElement(Type=typeof(Memo),ElementName="Memo",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Memo __Memo;
		
        [XmlIgnore]
        public Memo Memo
        {
            get
            {
                if (__Memo == null) __Memo = new Memo();		
                return __Memo;
            }
            set {__Memo = value;}
        }

        [XmlElement(Type=typeof(Lookup),ElementName="Lookup",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Lookup __Lookup;
		
        [XmlIgnore]
        public Lookup Lookup
        {
            get
            {
                if (__Lookup == null) __Lookup = new Lookup();		
                return __Lookup;
            }
            set {__Lookup = value;}
        }    

        [XmlElement(Type=typeof(Options),ElementName="Options",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Options __Options;
		
        [XmlIgnore]
        public Options Options
        {
            get
            {
                if (__Options == null) __Options = new Options();		
                return __Options;
            }
            set {__Options = value;}
        }

        [XmlElement(Type=typeof(Validators),ElementName="Validators",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Validators __Validators;
		
        [XmlIgnore]
        public Validators Validators
        {
            get
            {
                if (__Validators == null) __Validators = new Validators();		
                return __Validators;
            }
            set {__Validators = value;}
        }

        public Field()
        {
            Name = string.Empty;
            Title = string.Empty;
            Type = string.Empty;
            __RequiredSpecified = true;
            DefaultValue = string.Empty;
            @New = string.Empty;
            Edit = string.Empty;
        }
    }

    [XmlType(TypeName="TextBox"),Serializable]
    public class TextBox
    {

        [XmlAttribute(AttributeName="Columns",Form=XmlSchemaForm.Unqualified,DataType="unsignedShort")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public ushort __Columns;
		
        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ColumnsSpecified;
		
        [XmlIgnore]
        public ushort Columns
        { 
            get { return __Columns; }
            set { __Columns = value; __ColumnsSpecified = true; }
        }

        [XmlAttribute(AttributeName="MaxLength",Form=XmlSchemaForm.Unqualified,DataType="unsignedShort")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public ushort __MaxLength;
		
        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __MaxLenghtSpecified;
		
        [XmlIgnore]
        public ushort MaxLength
        { 
            get { return __MaxLength; }
            set { __MaxLength = value; __MaxLenghtSpecified = true; }
        }

        [XmlAttribute(AttributeName="RightToLeft",Form=XmlSchemaForm.Unqualified,DataType="boolean")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __RightToLeft;
		
        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __RightToLeftSpecified;
		
        [XmlIgnore]
        public bool RightToLeft
        { 
            get { return __RightToLeft; }
            set { __RightToLeft = value; __RightToLeftSpecified = true; }
        }

        public TextBox()
        {
            __ColumnsSpecified = true;
            __MaxLenghtSpecified = true;
            __RightToLeftSpecified = true;
        }
    }

    [XmlType(TypeName="Memo"),Serializable]
    public class Memo
    {

        [XmlAttribute(AttributeName="Columns",Form=XmlSchemaForm.Unqualified,DataType="unsignedShort")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public ushort __Columns;
		
        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ColumnsSpecified;
		
        [XmlIgnore]
        public ushort Columns
        { 
            get { return __Columns; }
            set { __Columns = value; __ColumnsSpecified = true; }
        }

        [XmlAttribute(AttributeName="Rows",Form=XmlSchemaForm.Unqualified,DataType="unsignedShort")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public ushort __Rows;
		
        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __RowsSpecified;
		
        [XmlIgnore]
        public ushort Rows
        { 
            get { return __Rows; }
            set { __Rows = value; __RowsSpecified = true; }
        }

        [XmlAttribute(AttributeName="MaxLength",Form=XmlSchemaForm.Unqualified,DataType="unsignedShort")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public ushort __MaxLength;
		
        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __MaxLengthSpecified;
		
        [XmlIgnore]
        public ushort MaxLength
        { 
            get { return __MaxLength; }
            set { __MaxLength = value; __MaxLengthSpecified = true; }
        }

        public Memo()
        {
            __ColumnsSpecified = true;
            __RowsSpecified = true;
            __MaxLengthSpecified = true;
        }
    }

    [XmlType(TypeName="Lookup"),Serializable]
    public class Lookup
    {
        [XmlAttribute(AttributeName = "ControlEditor", Form = XmlSchemaForm.Unqualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __ControlEditor;

        [XmlIgnore]
        public string ControlEditor
        {
            get { return __ControlEditor; }
            set { __ControlEditor = value; }
        }

        [XmlAttribute(AttributeName="TextField",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TextField;
		
        [XmlIgnore]
        public string TextField
        { 
            get { return __TextField; }
            set { __TextField = value; }
        }

        [XmlAttribute(AttributeName="ValueField",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __ValueField;
		
        [XmlIgnore]
        public string ValueField
        { 
            get { return __ValueField; }
            set { __ValueField = value; }
        }

        [XmlAttribute(AttributeName = "ValueFieldType", Form = XmlSchemaForm.Unqualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __ValueFieldType;

        [XmlIgnore]
        public string ValueFieldType
        {
            get { return __ValueFieldType; }
            set { __ValueFieldType = value; }
        }

        [XmlAttribute(AttributeName="Table",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Table;
		
        [XmlIgnore]
        public string Table
        { 
            get { return __Table; }
            set { __Table = value; }
        }

        [XmlAttribute(AttributeName="DisplayFormat",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DisplayFormat;
		
        [XmlIgnore]
        public string DisplayFormat
        { 
            get { return __DisplayFormat; }
            set { __DisplayFormat = value; }
        }
        [XmlAttribute(AttributeName = "Picker", Form = XmlSchemaForm.Unqualified, DataType = "boolean")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __Picker;

        [XmlIgnore]
        public bool Picker
        {
            get { return __Picker; }
            set { __Picker = value; }
        }

        public Lookup()
        {
            TextField = string.Empty;
            ValueField = string.Empty;
            Table = string.Empty;
            DisplayFormat = string.Empty;
        }
    }

    [XmlType(TypeName="Options"),Serializable]
    public class Options
    {

        [XmlAttribute(AttributeName="Multiple",Form=XmlSchemaForm.Unqualified,DataType="boolean")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __Multiple;
		
        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __MultipleSpecified;
		
        [XmlIgnore]
        public bool Multiple
        { 
            get { return __Multiple; }
            set { __Multiple = value; __MultipleSpecified = true; }
        }

        [XmlElement(Type=typeof(OptionsOption),ElementName="Option",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public OptionsOption __Option;
		
        [XmlIgnore]
        public OptionsOption Option
        {
            get
            {
                if (__Option == null) __Option = new OptionsOption();		
                return __Option;
            }
            set {__Option = value;}
        }

        public Options()
        {
            __MultipleSpecified = true;
        }
    }

    [XmlType(TypeName="OptionsOption"),Serializable]
    public class OptionsOption
    {

        [XmlAttribute(AttributeName="Show",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Show;
		
        [XmlIgnore]
        public string Show
        { 
            get { return __Show; }
            set { __Show = value; }
        }

        [XmlAttribute(AttributeName="Value",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Value;
		
        [XmlIgnore]
        public string @Value
        { 
            get { return __Value; }
            set { __Value = value; }
        }

        public OptionsOption()
        {
            Show = string.Empty;
            @Value = string.Empty;
        }
    }

    [XmlType(TypeName="Validators"),Serializable]
    public class Validators
    {
        [System.Runtime.InteropServices.DispIdAttribute(-4)]
        public IEnumerator GetEnumerator() 
        {
            return ValidatorCollection.GetEnumerator();
        }

        public Validator Add(Validator obj)
        {
            return ValidatorCollection.Add(obj);
        }

        [XmlIgnore]
        public Validator this[int index]
        {
            get { return ValidatorCollection[index]; }
        }

        [XmlIgnore]
        public int Count 
        {
            get { return ValidatorCollection.Count; }
        }

        public void Clear()
        {
            ValidatorCollection.Clear();
        }

        public Validator Remove(int index) 
        { 
            Validator obj = ValidatorCollection[index];
            ValidatorCollection.Remove(obj);
            return obj;
        }

        public void Remove(object obj)
        {
            ValidatorCollection.Remove(obj);
        }

        [XmlElement(Type=typeof(Validator),ElementName="Validator",IsNullable=false,Form=XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public ValidatorCollection __ValidatorCollection;
		
        [XmlIgnore]
        public ValidatorCollection ValidatorCollection
        {
            get
            {
                if (__ValidatorCollection == null) __ValidatorCollection = new ValidatorCollection();
                return __ValidatorCollection;
            }
            set {__ValidatorCollection = value;}
        }

        public Validators()
        {
        }
    }

    [XmlType(TypeName="Validator"),Serializable]
    public class Validator
    {

        [XmlAttribute(AttributeName="Type",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Type;
		
        [XmlIgnore]
        public string Type
        { 
            get { return __Type; }
            set { __Type = value; }
        }

        [XmlAttribute(AttributeName="DataType",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DataType;
		
        [XmlIgnore]
        public string DataType
        { 
            get { return __DataType; }
            set { __DataType = value; }
        }

        [XmlAttribute(AttributeName="MaxValue",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __MaxValue;
		
        [XmlIgnore]
        public string MaxValue
        { 
            get { return __MaxValue; }
            set { __MaxValue = value; }
        }

        [XmlAttribute(AttributeName="MinValue",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __MinValue;
		
        [XmlIgnore]
        public string MinValue
        { 
            get { return __MinValue; }
            set { __MinValue = value; }
        }

        [XmlAttribute(AttributeName="ErrorMessage",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __ErrorMessage;
		
        [XmlIgnore]
        public string ErrorMessage
        { 
            get { return __ErrorMessage; }
            set { __ErrorMessage = value; }
        }

        [XmlAttribute(AttributeName="Expression",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Expression;
		
        [XmlIgnore]
        public string Expression
        { 
            get { return __Expression; }
            set { __Expression = value; }
        }

        [XmlAttribute(AttributeName="Operation",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Operation;
		
        [XmlIgnore]
        public string Operation
        { 
            get { return __Operation; }
            set { __Operation = value; }
        }

        [XmlAttribute(AttributeName="Value",Form=XmlSchemaForm.Unqualified,DataType="string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Value;
		
        [XmlIgnore]
        public string @Value
        { 
            get { return __Value; }
            set { __Value = value; }
        }

        public Validator()
        {
            Type = string.Empty;
            ErrorMessage = string.Empty;
        }
    }
}
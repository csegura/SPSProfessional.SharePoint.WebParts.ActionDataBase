// Copyright 2004, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.4.2.1
// Schema file: ActionGridConfig.xsd
// Creation Date: 15/11/2007 14:04:55
//--------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using SPSProfessional.SharePoint.Framework.ConfigurationManager;

namespace SPSProfessional.SharePoint.WebParts.ActionDataBase.ActionGridConfig
{

	public struct Declarations
	{
		public const string SchemaVersion = "";
	}

	[Serializable]
	public enum FilterTypeCode
	{
		[XmlEnum(Name="Boolean")] Boolean,
		[XmlEnum(Name="Char")] @Char,
		[XmlEnum(Name="DateTime")] DateTime,
		[XmlEnum(Name="DBNull")] DBNull,
		[XmlEnum(Name="Decimal")] @Decimal,
		[XmlEnum(Name="Double")] @Double,
		[XmlEnum(Name="Empty")] Empty,
		[XmlEnum(Name="Int16")] Int16,
		[XmlEnum(Name="Int32")] Int32,
		[XmlEnum(Name="Int64")] Int64,
		[XmlEnum(Name="Single")] Single,
		[XmlEnum(Name="String")] @String,
		[XmlEnum(Name="UInt16")] UInt16,
		[XmlEnum(Name="UInt32")] UInt32,
		[XmlEnum(Name="UInt64")] UInt64
	}


	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class ContextMenuItemCollection : ArrayList
	{
		public ContextMenuItem Add(ContextMenuItem obj)
		{
			base.Add(obj);
			return obj;
		}

		public ContextMenuItem Add()
		{
			return Add(new ContextMenuItem());
		}

		public void Insert(int index, ContextMenuItem obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(ContextMenuItem obj)
		{
			base.Remove(obj);
		}

		new public ContextMenuItem this[int index]
		{
			get { return (ContextMenuItem) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class DataFieldCollection : ArrayList
	{
		public DataField Add(DataField obj)
		{
			base.Add(obj);
			return obj;
		}

		public DataField Add()
		{
			return Add(new DataField());
		}

		public void Insert(int index, DataField obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(DataField obj)
		{
			base.Remove(obj);
		}

		new public DataField this[int index]
		{
			get { return (DataField) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class ParamCollection : ArrayList
	{
		public Param Add(Param obj)
		{
			base.Add(obj);
			return obj;
		}

		public Param Add()
		{
			return Add(new Param());
		}

		public void Insert(int index, Param obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Param obj)
		{
			base.Remove(obj);
		}

		new public Param this[int index]
		{
			get { return (Param) base[index]; }
			set { base[index] = value; }
		}
	}



	[XmlRoot(ElementName="SPSActionGridConfig",IsNullable=false),Serializable]
	public class SPSActionGridConfig
	{

		[XmlElement(Type=typeof(DataBase),ElementName="DataBase",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public DataBase __DataBase;
		
		[XmlIgnore]
		public DataBase DataBase
		{
			get
			{
				if (__DataBase == null) __DataBase = new DataBase();		
				return __DataBase;
			}
			set {__DataBase = value;}
		}

		[XmlElement(Type=typeof(Grid),ElementName="Grid",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Grid __Grid;
		
		[XmlIgnore]
		public Grid Grid
		{
			get
			{
				if (__Grid == null) __Grid = new Grid();		
				return __Grid;
			}
			set {__Grid = value;}
		}

		[XmlElement(Type=typeof(Query),ElementName="Query",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Query __Query;
		
		[XmlIgnore]
		public Query Query
		{
			get
			{
				if (__Query == null) __Query = new Query();		
				return __Query;
			}
			set {__Query = value;}
		}

		[XmlElement(Type=typeof(Filter),ElementName="Filter",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Filter __Filter;
		
		[XmlIgnore]
		public Filter Filter
		{
			get
			{
				if (__Filter == null) __Filter = new Filter();		
				return __Filter;
			}
			set {__Filter = value;}
		}

		[XmlElement(Type=typeof(Columns),ElementName="Columns",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Columns __Columns;
		
		[XmlIgnore]
		public Columns Columns
		{
			get
			{
				if (__Columns == null) __Columns = new Columns();		
				return __Columns;
			}
			set {__Columns = value;}
		}

		public SPSActionGridConfig()
		{
		}
	}


	[XmlType(TypeName="DataBase"),Serializable]
	public class DataBase
	{

		[XmlAttribute(AttributeName="ConnectionString",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __ConnectionString;
		
		[XmlIgnore]
		public string ConnectionString
		{ 
			get
			{
                if (__ConnectionString.Contains("SPSCM:"))
                {
                    Debug.WriteLine(__ConnectionString.Substring(6));
                    return SPSConfigurationManager.GetValue("ActionDataBase", __ConnectionString.Substring(6));
                }
			    return __ConnectionString;
			}
			set { __ConnectionString = value; }
		}

		public DataBase()
		{
			ConnectionString = string.Empty;
		}
	}


	[XmlType(TypeName="Grid"),Serializable]
	public class Grid
	{

		[XmlAttribute(AttributeName="Name",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		[XmlAttribute(AttributeName="Sortable",Form=XmlSchemaForm.Unqualified,DataType="boolean")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __Sortable;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __SortableSpecified;
		
		[XmlIgnore]
		public bool Sortable
		{ 
			get { return __Sortable; }
			set { __Sortable = value; __SortableSpecified = true; }
		}

		[XmlAttribute(AttributeName="Pageable",Form=XmlSchemaForm.Unqualified,DataType="boolean")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __Pageable;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __PageableSpecified;
		
		[XmlIgnore]
		public bool Pageable
		{ 
			get { return __Pageable; }
			set { __Pageable = value; __PageableSpecified = true; }
		}

		[XmlAttribute(AttributeName="PageSize",Form=XmlSchemaForm.Unqualified,DataType="unsignedByte")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public byte __PageSize;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __PageSizeSpecified;
		
		[XmlIgnore]
		public byte PageSize
		{ 
			get { return __PageSize; }
			set { __PageSize = value; __PageSizeSpecified = true; }
		}

		public Grid()
		{
			Name = string.Empty;
			__SortableSpecified = true;
			__PageableSpecified = true;
			__PageSizeSpecified = true;
		}
	}


	[XmlType(TypeName="Query"),Serializable]
	public class Query
	{

		[XmlAttribute(AttributeName="SelectCommand",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __SelectCommand;
		
		[XmlIgnore]
		public string SelectCommand
		{ 
			get { return __SelectCommand; }
			set { __SelectCommand = value; }
		}

		[XmlAttribute(AttributeName="Cache",Form=XmlSchemaForm.Unqualified,DataType="boolean")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __Cache;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __CacheSpecified;
		
		[XmlIgnore]
		public bool Cache
		{ 
			get { return __Cache; }
			set { __Cache = value; __CacheSpecified = true; }
		}

		public Query()
		{
			SelectCommand = string.Empty;
		}
	}


	[XmlType(TypeName="Filter"),Serializable]
	public class Filter
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
			return ParamCollection.GetEnumerator();
		}

		public Param Add(Param obj)
		{
			return ParamCollection.Add(obj);
		}

		[XmlIgnore]
		public Param this[int index]
		{
			get { return (Param) ParamCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return ParamCollection.Count; }
        }

        public void Clear()
		{
            ParamCollection.Clear();
        }

		public Param Remove(int index) 
		{ 
            Param obj = ParamCollection[index];
            ParamCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            ParamCollection.Remove(obj);
        }

		[XmlAttribute(AttributeName="Expression",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Expression;
		
		[XmlIgnore]
		public string Expression
		{ 
			get { return __Expression; }
			set { __Expression = value; }
		}

		[XmlElement(Type=typeof(Param),ElementName="Param",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ParamCollection __ParamCollection;
		
		[XmlIgnore]
		public ParamCollection ParamCollection
		{
			get
			{
				if (__ParamCollection == null) __ParamCollection = new ParamCollection();
				return __ParamCollection;
			}
			set {__ParamCollection = value;}
		}

		public Filter()
		{
		}
	}


	[XmlType(TypeName="Param"),Serializable]
	public class Param
	{

		[XmlAttribute(AttributeName="Name",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		[XmlAttribute(AttributeName="Type",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Type;
		
		[XmlIgnore]
		public string Type
		{ 
			get { return __Type; }
			set { __Type = value; }
		}

		[XmlAttribute(AttributeName="Default",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Default;
		
		[XmlIgnore]
		public string @Default
		{ 
			get { return __Default; }
			set { __Default = value; }
		}

		public Param()
		{
			Name = string.Empty;
			Type = string.Empty;
			@Default = string.Empty;
		}
	}


	[XmlType(TypeName="Columns"),Serializable]
	public class Columns
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
			return DataFieldCollection.GetEnumerator();
		}

		public DataField Add(DataField obj)
		{
			return DataFieldCollection.Add(obj);
		}

		[XmlIgnore]
		public DataField this[int index]
		{
			get { return (DataField) DataFieldCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return DataFieldCollection.Count; }
        }

        public void Clear()
		{
            DataFieldCollection.Clear();
        }

		public DataField Remove(int index) 
		{ 
            DataField obj = DataFieldCollection[index];
            DataFieldCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            DataFieldCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(DataField),ElementName="DataField",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public DataFieldCollection __DataFieldCollection;
		
		[XmlIgnore]
		public DataFieldCollection DataFieldCollection
		{
			get
			{
				if (__DataFieldCollection == null) __DataFieldCollection = new DataFieldCollection();
				return __DataFieldCollection;
			}
			set {__DataFieldCollection = value;}
		}

		public Columns()
		{
		}
	}


	[XmlType(TypeName="DataField"),Serializable]
	public class DataField
	{

		[XmlAttribute(AttributeName="Name",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		[XmlAttribute(AttributeName="Header",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Header;
		
		[XmlIgnore]
		public string Header
		{ 
			get { return __Header; }
			set { __Header = value; }
		}

		[XmlAttribute(AttributeName="Format",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Format;
		
		[XmlIgnore]
		public string Format
		{ 
			get { return __Format; }
			set { __Format = value; }
		}

		[XmlAttribute(AttributeName="SortExpression",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __SortExpression;
		
		[XmlIgnore]
		public string SortExpression
		{ 
			get { return __SortExpression; }
			set { __SortExpression = value; }
		}

	    [XmlAttribute(AttributeName = "IsHtml", Form = XmlSchemaForm.Unqualified, DataType = "boolean")]
	    [EditorBrowsable(EditorBrowsableState.Advanced)]
	    public bool __IsHtml;

        [XmlIgnore]
        public bool IsHtml
        {
            get { return __IsHtml; }
            set { __IsHtml = value; }
        }

        [XmlAttribute(AttributeName = "Select", Form = XmlSchemaForm.Unqualified, DataType = "boolean")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __Select;

        [XmlIgnore]
        public bool Select
        {
            get { return __Select; }
            set { __Select = value; }
        }

		[XmlElement(Type=typeof(ContextMenu),ElementName="ContextMenu",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ContextMenu __ContextMenu;
		
		[XmlIgnore]
		public ContextMenu ContextMenu
		{
			get
			{
				if (__ContextMenu == null) __ContextMenu = new ContextMenu();		
				return __ContextMenu;
			}
			set {__ContextMenu = value;}
		}

		public DataField()
		{
			Name = string.Empty;
			Header = string.Empty;
		}
	}


	[XmlType(TypeName="ContextMenu"),Serializable]
	public class ContextMenu
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
			return ContextMenuItemCollection.GetEnumerator();
		}

		public ContextMenuItem Add(ContextMenuItem obj)
		{
			return ContextMenuItemCollection.Add(obj);
		}

		[XmlIgnore]
		public ContextMenuItem this[int index]
		{
			get { return (ContextMenuItem) ContextMenuItemCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return ContextMenuItemCollection.Count; }
        }

        public void Clear()
		{
            ContextMenuItemCollection.Clear();
        }

		public ContextMenuItem Remove(int index) 
		{ 
            ContextMenuItem obj = ContextMenuItemCollection[index];
            ContextMenuItemCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            ContextMenuItemCollection.Remove(obj);
        }

		[XmlAttribute(AttributeName="Fields",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Fields;
		
		[XmlIgnore]
		public string Fields
		{ 
			get { return __Fields; }
			set { __Fields = value; }
		}

		[XmlAttribute(AttributeName="Format",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Format;
		
		[XmlIgnore]
		public string Format
		{ 
			get { return __Format; }
			set { __Format = value; }
		}

		[XmlElement(Type=typeof(ContextMenuItem),ElementName="ContextMenuItem",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ContextMenuItemCollection __ContextMenuItemCollection;
		
		[XmlIgnore]
		public ContextMenuItemCollection ContextMenuItemCollection
		{
			get
			{
				if (__ContextMenuItemCollection == null) __ContextMenuItemCollection = new ContextMenuItemCollection();
				return __ContextMenuItemCollection;
			}
			set {__ContextMenuItemCollection = value;}
		}

		public ContextMenu()
		{
			Fields = string.Empty;
		}
	}


	[XmlType(TypeName="ContextMenuItem"),Serializable]
	public class ContextMenuItem
	{

		[XmlAttribute(AttributeName="Name",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		[XmlAttribute(AttributeName="Image",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Image;
		
		[XmlIgnore]
		public string Image
		{ 
			get { return __Image; }
			set { __Image = value; }
		}

		[XmlAttribute(AttributeName="Url",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Url;
		
		[XmlIgnore]
		public string Url
		{ 
			get { return __Url; }
			set { __Url = value; }
		}

		public ContextMenuItem()
		{
			Name = string.Empty;
			Image = string.Empty;
			Url = string.Empty;
		}
	}
}
